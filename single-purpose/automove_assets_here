#!/bin/bash

# Watch $SOURCE_DIR for file creation or files moved into $SOURCE_DIR ending
# with $FILE_EXT to automatically move all files containing $FILE_EXT into
# current directory.
#
# Additionally, change file permission to chmod 644 after moving.

set -e

if [[ "${1:-}" == "-h" || "${1:-}" == "--help" ]]; then
	echo -e "Usage: $(basename -- "${0}") <source_dir> [file_ext(s)...]"
	echo -e "  source_dir: Directory to watch for file creation or files moved into"
	echo -e "  file_ext: File extension to watch for (default: *)"
	echo -e ""
	echo -e "Example: $(basename -- "${0}") \$HOME/Documents/ jpg png pdf"
	echo -e ""
	echo -e "Flags:"
	echo -e "  -h, --help: Show this help message"
	exit 0
fi

[[ -z "${1:-}" ]] && echo -e "No directory specified" && exit 1
[[ -z "${2:-}" ]] && echo -e "No file extension specified" && exit 1

if [[ -d "${1:-}" ]]; then
	SOURCE_DIR="${1}"
	shift 1
else
	echo -e "No directory specified"
	exit 1
fi

declare -a FILE_EXT=("${@:-*}")

TARGET_DIR="."
DEPTH=1
INTERVAL=1
SOURCE_DIR=$(echo "${SOURCE_DIR}" | sed 's,/*$,,')

echo -e "Now watching ${SOURCE_DIR} for ${FILE_EXT[*]} asset files..."

while true; do
	for file_ext in "${FILE_EXT[@]}"; do
		find "${SOURCE_DIR}" -maxdepth ${DEPTH} -type f -name "*.${file_ext}" -print0 |
			while IFS= read -r -d '' file; do
				# Wait for file to be fully written before moving
				while [[ -f "${file}" && ! -s "${file}" ]]; do
					sleep 1
				done
				target="${TARGET_DIR}/$(basename -- "${file}")"
				if [[ -e "${target}" ]]; then
					mv -v --backup=numbered "${target}" "${target}.bak"
				fi
				mv -v "${file}" "${target}" && chmod 644 "${target}"
			done
	done
	sleep "${INTERVAL}"
done
